#!/bin/bash

SRILM_DIR=/home/lvapeab/smt/software/srilm/bin/i686-m64
THOT_DIR=/home/lvapeab/smt/software/thot/bin/

AWK=/usr/bin/awk
SORT=/usr/bin/sort
PYTHON=/usr/bin/python
sortpars="-S 131072"
sortT="yes"
sortm="yes"
SPLIT=/usr/bin/split
SED=/bin/sed
GREP=/bin/grep
SED=/bin/sed
UNIQ=/usr/bin/uniq
BASENAME=/usr/bin/basename
SSH=/usr/bin/ssh
HEAD=/usr/bin/head
TAIL=/usr/bin/tail
MKTEMP=/bin/mktemp


usage(){
    echo "Usage: change_unks -i <trans1> [-o <output>][-c <counts>] [-t <threshold>] [-v] [-tmp <string>]  "
    echo " -i    <string>       : File with sentences generated by the main TM."
    echo "-src <string>       : File with source sentences."
    echo " -c <string>        : Frequency counts file."
    echo " -t <string>        : Frequency threshold (0 by default)."
    echo " -o <string>        : Output file (default, standard output)."
    echo " -v                   : Verbose mode."
    echo "-tmp <string>         : Temporary directory where data is stored"
}


str_is_option()
{
    echo "" | ${AWK} -v s=$1 '{if(!match(s,"-[a-zA-Z]")) print "0"; else print "1"}'
}


input=""
input_given=0
output=""
verbose_opt=0
tmp="."

threshold=0
counts=""
counts_given=0

while [ $# -ne 0 ]; do
 case $1 in
     "--help") usage
         exit 0
         ;;
  

     "-i") shift
         if [ $# -ne 0 ]; then
             input=$1
	     input_given=1
         else
             input_given=0
         fi
         ;;

     "-o") shift
         if [ $# -ne 0 ]; then
             output=$1
         else
             output=""
         fi
         ;;
    "-src") shift
         if [ $# -ne 0 ]; then
             src_file=$1
	     src_given=1
         else
             src_given=0
         fi
         ;;
     "-c") shift
         if [ $# -ne 0 ]; then
             counts_file=$1
	     counts_given=1
         else
             counts_given=0
         fi
         ;;

     "-t") shift
         if [ $# -ne 0 ]; then
             threshold=$1
         else
             threshold="."
         fi
         ;;
     "-tmp") shift
         if [ $# -ne 0 ]; then
             tmp=$1
         else
             tmp="."
         fi
         ;;


     "-v") verbose_opt=1
         ;;

    esac
    shift
done

#### Verify parameters                                                                                                                        


if [ ${input_given} -eq 0 ]; then
    # invalid parameters                                                                                                                      
    echo "Error: -i option not given"
    exit 1
fi
if [ ${counts_given} -eq 0 ]; then
    # invalid parameters                                                                                                                      
    echo "Error: -c option not given"
    exit 1
fi
if [ ${src_given} -eq 0 ]; then
    # invalid parameters                                                                                                                      
    echo "Error: -src option not given"
    exit 1
fi
#Parameters are OK         

IFS=' '
i=0
echo -n "" > $output
while read  sentence; do    
    edited_sentence=""
    translation=""  
    changed=0
    for word in ${sentence}; do
	counts=500000000
	counts=`cat $counts_file |awk -v word="$word" 'BEGIN{found=0}{if($1==word){print $2;found =1 ;exit;}}END{if(found ==0) print "0";}'`
	# echo "counts: ${counts} --- threshold: ${threshold}"
	if [ "${counts}" -lt "${threshold}" ]; then
	    previous=${word}
	    word=`${THOT_DIR}/thot_client -i 127.0.0.1 -t "${word}"`
	    if [ "${previous}" != "${word}" ]; then
		echo "Rare word \"$previous\" translated to \"$word\""
		changed=1
	    fi
	fi
	edited_sentence=${edited_sentence}" "${word}
    done
    i=$((i+1))

    
    edited_sentence=`echo "${edited_sentence}"|xargs`
    echo "${edited_sentence}" >> $output
    if [ $verbose_opt -eq 1 ]; then
	echo "$i"
	echo "Old sentence: $sentence"
	echo "Edited sentence: ${edited_sentence}"
       
    fi

done<${input}